<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>沉思录</title>
    <link>https://zaorangyang.github.io/</link>
    <description>Recent content on 沉思录</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 23 Jul 2020 17:47:57 +0800</lastBuildDate>
    
	<atom:link href="https://zaorangyang.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MongoDB跨机房自动failover：并行复制全局锁造成的QPS掉底原因分析与解决</title>
      <link>https://zaorangyang.github.io/posts/mongo-parallel-batch-lock/</link>
      <pubDate>Thu, 23 Jul 2020 17:47:57 +0800</pubDate>
      
      <guid>https://zaorangyang.github.io/posts/mongo-parallel-batch-lock/</guid>
      <description>背景 MongoDB是一个分布式数据库，底层数据通过Raft协议复制，原生支持数据强一致性以及分布式事务，支持副本集自动failover。一个典型的MongoDB集群拓扑如下图所示： mongos是代理层</description>
    </item>
    
    <item>
      <title>VIP引起的Mongos Cursor Not Found问题定位与解决方案</title>
      <link>https://zaorangyang.github.io/posts/mongos-cursor-not-found/</link>
      <pubDate>Sun, 17 May 2020 22:47:57 +0800</pubDate>
      
      <guid>https://zaorangyang.github.io/posts/mongos-cursor-not-found/</guid>
      <description>现象 业务方反应查询数据时，mongo有时候会报Cursor not found的错误，该错误不只java dirver有出现，对于使用golang的业务，也有反馈: 集群架构如下图所示。LVS采用round-ro</description>
    </item>
    
    <item>
      <title>为什么需要右值引用</title>
      <link>https://zaorangyang.github.io/posts/cpp-lvalue-reference/</link>
      <pubDate>Mon, 30 Dec 2019 14:34:01 +0800</pubDate>
      
      <guid>https://zaorangyang.github.io/posts/cpp-lvalue-reference/</guid>
      <description>C++所有表达式和变量要么是左值，要么是右值。 左值表示非临时对象 右值指临时对象，它们只在当前的语句中有效。 在C++11之前，除了用常量引用绑定右值一个右值之外，右值不能被引用： const int &amp;amp;a = 1; 这种情况下，右</description>
    </item>
    
    <item>
      <title>数据库系统实现--并发控制</title>
      <link>https://zaorangyang.github.io/posts/db-system-impl-concurrency-control/</link>
      <pubDate>Sat, 21 Dec 2019 20:03:04 +0800</pubDate>
      
      <guid>https://zaorangyang.github.io/posts/db-system-impl-concurrency-control/</guid>
      <description>引言 并发执行的事务之间相互影响，会使数据库处于不一致状态。因此各个事务的每个执行步骤，需要按照某种方式来规范。该规范是由调度器完成的。 事务对数据元素的请求会传递给调度器，调度器决定应该按照什么样的顺序</description>
    </item>
    
    <item>
      <title>数据库系统实现--系统故障对策</title>
      <link>https://zaorangyang.github.io/posts/db-system-impl-system-failure/</link>
      <pubDate>Sat, 14 Dec 2019 15:11:04 +0800</pubDate>
      
      <guid>https://zaorangyang.github.io/posts/db-system-impl-system-failure/</guid>
      <description>引言 数据库最重要的目的之一是保证数据的完整性，即使在非常极端的情况下，也要保证数据不丢失。为此，我们考虑两个主要的问题: 系统发生故障时，数据必须受到保护。本次主要讨论支持可恢复性这一目标技术，即系统发</description>
    </item>
    
    <item>
      <title>MongoDB源码编译</title>
      <link>https://zaorangyang.github.io/posts/mongo-compile/</link>
      <pubDate>Fri, 08 Nov 2019 20:11:04 +0800</pubDate>
      
      <guid>https://zaorangyang.github.io/posts/mongo-compile/</guid>
      <description>主要参考资料: https://github.com/mongodb/mongo/wiki/Build-Mongodb-From-Source 编译环境：Centos\Ubuntu 依赖 编译master分支，gcc版本需要在8.0以上，编译3.6，gcc版本需要在5.4.0以上 升级的gcc的路径不要装错，否则会出现一些错误，fi</description>
    </item>
    
    <item>
      <title>Raft论文阅读：Raft Basic</title>
      <link>https://zaorangyang.github.io/posts/raft-basic/</link>
      <pubDate>Mon, 21 Oct 2019 08:11:04 +0800</pubDate>
      
      <guid>https://zaorangyang.github.io/posts/raft-basic/</guid>
      <description>Raft是一种分布式一致性算法，关于该算法的论文很多，本文参阅的论文为In Search of an Understandable Consensus Algorithm (Extended Version)，该论文对于Raft Basic有很好的讲解，可以作为Raft算法的入门资料，本文还同时参考了MI</description>
    </item>
    
    <item>
      <title>[MySQL Release Notes] MySQL5.7.0翻译</title>
      <link>https://zaorangyang.github.io/posts/changes-in-mysql5.7.0-translate/</link>
      <pubDate>Mon, 17 Jun 2019 19:22:09 +0800</pubDate>
      
      <guid>https://zaorangyang.github.io/posts/changes-in-mysql5.7.0-translate/</guid>
      <description>[MySQL Release Notes] MySQL5.7.0翻译 翻译自：https://dev.mysql.com/doc/relnotes/mysql/5.7/en/news-5-7-0.html 诊断记录(Diagnostics Notes) M</description>
    </item>
    
    <item>
      <title>关于我</title>
      <link>https://zaorangyang.github.io/about/me/</link>
      <pubDate>Sun, 23 Aug 1992 09:00:00 +0800</pubDate>
      
      <guid>https://zaorangyang.github.io/about/me/</guid>
      <description>大家好，我的名字是杨凿让。我是一名研发工程师，当前在滴滴基础架构部从事与database和数据存储相关的开发工作。我深爱我从事的领域，认为数字时代的database就像古代的纸和笔。 我平时爱读书，偏爱</description>
    </item>
    
  </channel>
</rss>